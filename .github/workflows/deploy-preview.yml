name: Deploy Preview

on:
  workflow_dispatch:

# # Avoids running this workflow multiple times for the same PR
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.vercel-env }}-${{ inputs.github-env }}
#   cancel-in-progress: true

env:
  ENVIRONMENT: preview

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
      # The URL where the deployment is accessible, will be shown in the Summary section of the deployment
      url: ${{ steps.deploy.outputs.url }}
    steps:
      # - name: Check if current branch is main
      #   id: check_branch
      #   run: |
      #     if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
      #       echo "Please use preview deployments only on feature branches in order to automatically clean up the deployments when the PR is closed."
      #       exit 1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Sync Environment Config from Vercel
        run: vercel pull --yes --environment=${{ env.ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project using Vercel
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      # How to set environment variables in Vercel?

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Hash branch name
        id: hash_branch
        uses: pplanel/hash-calculator-action@v1.3.1
        with:
          input: ${{ steps.extract_branch.outputs.branch }}
          method: MD5

      - name: Deploy Prebuilt Project
        id: deploy
        env:
          META_TAG: ${{ steps.hash_branch.outputs.digest }}-${{ github.run_number }}-${{ github.run_attempt}}
        run: |
          url=$(vercel deploy --prebuilt --archive=tgz --token=${{ secrets.VERCEL_TOKEN }} --meta base_hash=${{ env.META_TAG }})

          echo "url=$url" >> $GITHUB_OUTPUT

      # - uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |
      #       Your deployment has completed!

      #       [Preview deployment](${{ steps.deploy.outputs.url }})
